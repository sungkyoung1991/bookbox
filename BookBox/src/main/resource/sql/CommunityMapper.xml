<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="CommunityMapper">
	
	<resultMap id="selectBoard" type="board">
		<id property="boardNo" column="board_no" jdbcType="NUMERIC"/>
		<result property="boardTitle" column="board_title" jdbcType="VARCHAR"/>
		<result property="boardContent" column="board_content" jdbcType="VARCHAR"/>
		<result property="boardRegDate" column="reg_date" jdbcType="DATE"/>
		<result property="recommend" column="recommend_count" jdbcType="NUMERIC"/>
		<result property="report" column="report_count" jdbcType="NUMERIC"/>
		<result property="thumbnailUrl" column="thumbnail_url" jdbcType="VARCHAR"/>
		<result property="commentCount" column="comment_count" jdbcType="NUMERIC"/>
		<association property="writer" javaType="user">
			<result property="email" column="email"/>
			<result property="nickname" column="nickname"/>
			<result property="role" column="role"/>
			<result property="booklogImage" column="booklog_image"/>
		</association>
		<collection property="tagList" javaType="java.util.ArrayList" ofType="tag" column="{categoryNo=category_no,targetNo=board_no}" select="TagMapper.getTagGroupList"/>
	</resultMap>
	
	<resultMap type="comment" id="selectComment">
		<result property="commentNo" column="comment_no" jdbcType="NUMERIC"/>
		<result property="boardNo" column="board_no" jdbcType="NUMERIC"/>
		<result property="seniorCommentNo" column="senior_comment_no" jdbcType="NUMERIC"/>
		<result property="content" column="content" jdbcType="VARCHAR"/>
		<result property="regDate" column="reg_date" jdbcType="DATE"/>
		<result property="level" column="level" jdbcType="NUMERIC"/>
		<result property="active" column="active" jdbcType="NUMERIC" />
		<result property="reportCount" column="report_count" jdbcType="NUMERIC"/>
		<result property="recommendCount" column="recommend_count" jdbcType="NUMERIC"/>
		<association property="writer" javaType="user">
			<result property="email" column="email" jdbcType="VARCHAR"/>
			<result property="nickname" column="nickname" jdbcType="VARCHAR"/>
			<result property="role" column="role"/>
			<result property="booklogImage" column="booklog_image"/>
		</association>
	</resultMap>

<!-- 
	<resultMap id="selectBoard2" type="board">
		<id property="boardNo" column="board_no" jdbcType="NUMERIC"/>
		<result property="boardTitle" column="board_title" jdbcType="VARCHAR"/>
		<result property="boardContent" column="board_content" jdbcType="VARCHAR"/>
		<result property="boardRegDate" column="reg_date" jdbcType="DATE"/>
		<result property="recommend" column="recommend_count" jdbcType="NUMERIC"/>
		<result property="report" column="report_count" jdbcType="NUMERIC"/>
		<association property="writer" javaType="user">
			<result property="email" column="email"/>
			<result property="nickname" column="nickname"/>
			<result property="role" column="role"/>
			<result property="booklogImage" column="booklog_image"/>
		</association>
		<collection property="tagList" javaType="java.util.ArrayList" ofType="tag" resultMap="TagMapper.tagSelectMap"/>
	</resultMap>
   -->



	<insert id="addBoard" parameterType="Board" useGeneratedKeys="true" 
		keyProperty="boardNo" keyColumn="board_no">
			INSERT INTO board (email, board_title, board_content,thumbnail_url) 
			VALUES (
						#{writer.email:VARCHAR}, 
						#{boardTitle:VARCHAR}, 
						#{boardContent:VARCHAR},
						#{thumbnailUrl:VARCHAR}
					)
	</insert>
	
	<select id="getBoard" parameterType="_int" resultMap="selectBoard">
		SELECT b.board_no, b.email, b.board_title, b.board_content, b.reg_date, b.report_count, b.recommend_count, b.thumbnail_url , '6' as category_no,
		u.nickname, u.role ,u.booklog_image, count(c.board_no) as comment_count
		FROM board AS b join user AS u ON b.email = u.email left join `comment` AS c ON b.board_no = c.board_no
		WHERE
		b.board_no = #{value}
		group by b.board_no
	</select>
	
	<delete id="deleteBoard" parameterType="_int">
		DELETE FROM board WHERE board_no={#value}
	</delete>
	
	<update id="updateBoard" parameterType="board">
		UPDATE board 
		SET board_title=#{boardTitle},
			board_content=#{boardContent},
			recommend_count=#{recommend},
			report_count=#{report},
			thumbnail_url=#{thumbnailUrl}
		WHERE board_no=#{boardNo}
	</update>

	<select id="getBoardList" parameterType="map" resultMap="selectBoard">
		SELECT b.board_no, b.email, b.board_title, b.board_content, b.reg_date, b.report_count, b.recommend_count, b.thumbnail_url ,'6' as category_no,
		u.nickname, u.role, u.booklog_image, count(c.board_no) as comment_count
		FROM board AS b join user AS u ON b.email = u.email left join `comment` AS c ON b.board_no = c.board_no
		WHERE
		<if test="search.condition==0">
			b.board_title LIKE '%${search.keyword}%'
		</if> 
		<if test="search.condition==1">
			u.nickname LIKE '%${search.keyword}%'
		</if>
		group by b.board_no
		Order By 
		<if test="search.order==0"> <!-- 등록날짜순 -->
			b.reg_date desc
		</if>
		<if test="search.order==1"> <!-- 추천수 -->
			b.recommend_count desc
		</if>
		<if test="search.order==2"> <!-- 댓글수 -->
			count(c.board_no) desc
		</if>
		LIMIT #{page.startRow}, #{page.pageSize}
	</select>
	
	<select id="getBoardTotal" parameterType="map" resultType="int">
		SELECT count(*)
		FROM board AS b join user AS u ON b.email = u.email
		WHERE
		<if test="search.condition==0">
			b.board_title LIKE '%${search.keyword}%'
		</if> 
		<if test="search.condition==1">
			u.nickname LIKE '%${search.keyword}%'
		</if>

	</select>
	<!-- 
	<select id="getBoard2" parameterType="_int" resultMap="selectBoard2">
		SELECT b.board_no, b.email, b.board_title, b.board_content, b.reg_date, b.report_count, b.recommend_count ,
				u.nickname, u.role, u.booklog_image,
				tg.target_no ,tg.tag_no, tg.category_no, t.tag_name 
		FROM 
        	board AS b JOIN user AS u ON b.email=u.email LEFT JOIN tag_group AS tg ON b.board_no = tg.target_no
        	LEFT JOIN tag AS t ON tg.tag_no = t.tag_no
		WHERE (tg.category_no=6 OR tg.category_no IS NULL)
				AND b.board_no=#{value}
	</select>
	 -->
	<!-- 태그 포함 받아오는 버젼 페이징 문제로 폐기 -->
	<!-- 
	<select id="getBoardList2" parameterType="map" resultMap="selectBoard2">
		SELECT b.board_no, b.email, b.board_title, b.board_content, b.reg_date, b.report_count, b.recommend_count ,
				u.nickname, u.role,
				tg.target_no ,tg.tag_no, tg.category_no, t.tag_name
		FROM 
        	board AS b JOIN user AS u ON b.email=u.email LEFT JOIN tag_group AS tg ON b.board_no = tg.target_no
        	LEFT JOIN tag AS t ON tg.tag_no = t.tag_no
		WHERE
			(tg.category_no=6 OR tg.category_no IS NULL)
		<if test="search.condition==0">
			AND b.board_title LIKE '%${search.keyword}%'
		</if> 
		<if test="search.condition==1">
			AND u.nickname LIKE '%${search.keyword}%'
		</if>
		LIMIT #{page.startRow}, #{page.pageSize}
	</select>
	 -->
	<!-- ====================  comment sql ===================== -->
	
	<insert id="addComment" parameterType="comment">
		INSERT INTO comment (board_no, senior_comment_no, email, level, content, active) 
		VALUES (
				#{boardNo}, 
				<if test="seniorCommentNo==0">
				NULL,
				</if>
				<if test="seniorCommentNo!=0">
				#{seniorCommentNo},
				</if> 
				#{writer.email:VARCHAR}, 
				#{level}, 
				#{content:VARCHAR}, 
				'1')
	</insert>
	
	<select id="getComment" parameterType="_int" resultMap="selectComment">
		SELECT 	c.comment_no, c.board_no, c.senior_comment_no, c.email, c.level, c.content, c.reg_date, c.report_count, c.active, recommend_count,
				u.nickname, u.role, u.booklog_image
		FROM	comment c, user u
		WHERE 
				c.email = u.email AND
				c.comment_no = #{value}
	</select>
	
	<update id="updateComment" parameterType="comment">
		UPDATE comment 
		SET board_no=#{boardNo}, 
			senior_comment_no=#{seniorCommentNo}, 
			email=#{writer.email},
			level=#{level}, 
			content=#{content},
			recommend_count=#{recommendCount}, 
			report_count=#{reportCount}, 
			active=#{active}
		WHERE 
			comment_no=#{commentNo}
		
	</update>
	
	<select id="getCommentList" parameterType="_int" resultMap="selectComment">
		SELECT 	c.comment_no, c.board_no, c.senior_comment_no, c.email, c.level, c.content, c.reg_date, c.report_count, c.active, recommend_count,
				u.nickname, u.role, u.booklog_image
		FROM	comment c, user u
		WHERE 
				c.email = u.email AND
				c.board_no = #{value}
	</select>
	
	<!-- 댓글 최대깊이 탐색 -->
	<select id="getCommentMaxLevel" parameterType="_int" resultType="_int">
		SELECT IFNULL( MAX(level),0)
		FROM comment 
		WHERE board_no=#{value}
	</select>
	
	<insert id="addRecommend" parameterType="recommend">
		
		INSERT INTO recommend (`email`, `target_no`, `category_no`, `pref`) 
		VALUES (
				#{email:VARCHAR}, 
				#{targetNo}, 
				#{categoryNo},
				#{pref:VARCHAR}
				)
				
	</insert>
	
	<select id="getRecommend" parameterType="recommend" resultType="_int">
		SELECT COUNT(*)
		FROM recommend
		WHERE email=#{email} AND category_no= #{categoryNo} AND target_no=#{targetNo} AND pref=#{pref}
		
	</select>
	
	<insert id="addReport" parameterType="report">
		
		INSERT INTO report (`email`, `target_no`, `category_no`) 
		VALUES (
				#{email:VARCHAR}, 
				#{targetNo}, 
				#{categoryNo}
				)
		
	</insert>
	
	<select id="getReport" parameterType="report" resultType="_int" >
		SELECT COUNT(*)
		FROM report
		WHERE email=#{email} AND category_no= #{categoryNo} AND target_no=#{targetNo}
	</select>

</mapper>